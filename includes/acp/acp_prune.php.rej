*** includes/acp/acp_prune.php	2013-09-28 15:40:10.000000000 +0200
--- includes/acp/acp_prune.php	2015-05-03 17:14:55.000000000 +0200
***************
*** 474,501 ****
  		}
  		$db->sql_freeresult($result);
  
! 		// Do not prune founder members
! 		$sql = 'SELECT user_id, username
! 			FROM ' . USERS_TABLE . '
! 			WHERE user_id <> ' . ANONYMOUS . '
! 				AND user_type <> ' . USER_FOUNDER . "
! 			$where_sql";
! 		$result = $db->sql_query($sql);
  
! 		$where_sql = '';
! 		$user_ids = $usernames = array();
  
! 		while ($row = $db->sql_fetchrow($result))
  		{
! 			// Do not prune bots and the user currently pruning.
! 			if ($row['user_id'] != $user->data['user_id'] && !in_array($row['user_id'], $bot_ids))
  			{
! 				$user_ids[] = $row['user_id'];
! 				$usernames[$row['user_id']] = $row['username'];
  			}
  		}
- 		$db->sql_freeresult($result);
  	}
  }
- 
- ?>--- 509,592 ----
  		}
  		$db->sql_freeresult($result);
  
! 		// Protect the admin, do not prune if no options are given...
! 		if ($where_sql)
! 		{
! 			// Do not prune founder members
! 			$sql = 'SELECT user_id, username
! 				FROM ' . USERS_TABLE . '
! 				WHERE user_id <> ' . ANONYMOUS . '
! 					AND user_type <> ' . USER_FOUNDER . "
! 				$where_sql";
! 			$result = $db->sql_query($sql);
  
! 			$user_ids = $usernames = array();
  
! 			while ($row = $db->sql_fetchrow($result))
! 			{
! 				// Do not prune bots and the user currently pruning.
! 				if ($row['user_id'] != $user->data['user_id'] && !in_array($row['user_id'], $bot_ids))
! 				{
! 					$user_ids[] = $row['user_id'];
! 					$usernames[$row['user_id']] = $row['username'];
! 				}
! 			}
! 			$db->sql_freeresult($result);
! 		}
! 
! 		if ($group_id)
  		{
! 			$sql = 'SELECT u.user_id, u.username
! 				FROM ' . USER_GROUP_TABLE . ' ug, ' . USERS_TABLE . ' u
! 				WHERE ug.group_id = ' . (int) $group_id . '
! 					AND ug.user_id <> ' . ANONYMOUS . '
! 					AND u.user_type <> ' . USER_FOUNDER . '
! 					AND ug.user_pending = 0 ' .
! 					((!empty($user_ids)) ? ' AND ' . $db->sql_in_set('ug.user_id', $user_ids) : '') . '
! 					AND u.user_id = ug.user_id';
! 			$result = $db->sql_query($sql);
! 
! 			// we're performing an intersection operation, so all the relevant users
! 			// come from this most recent query (which was limited to the results of the
! 			// previous query)
! 			$user_ids = $usernames = array();
! 			while ($row = $db->sql_fetchrow($result))
  			{
! 				// Do not prune bots and the user currently pruning.
! 				if ($row['user_id'] != $user->data['user_id'] && !in_array($row['user_id'], $bot_ids))
! 				{
! 					$user_ids[] = $row['user_id'];
! 					$usernames[$row['user_id']] = $row['username'];
! 				}
  			}
+ 			$db->sql_freeresult($result);
+ 		}
+ 
+ 		if ($posts_on_queue !== false)
+ 		{
+ 			$sql = 'SELECT u.user_id, u.username, COUNT(p.post_id) AS queue_posts
+ 				FROM ' . POSTS_TABLE . ' p, ' . USERS_TABLE . ' u
+ 				WHERE u.user_id <> ' . ANONYMOUS . '
+ 					AND u.user_type <> ' . USER_FOUNDER .
+ 					((!empty($user_ids)) ? ' AND ' . $db->sql_in_set('p.poster_id', $user_ids) : '') . '
+ 					AND ' . $db->sql_in_set('p.post_visibility', array(ITEM_UNAPPROVED, ITEM_REAPPROVE)) . '
+ 					AND u.user_id = p.poster_id
+ 				GROUP BY p.poster_id
+ 				HAVING queue_posts ' . $key_match[$queue_select] . ' ' . $posts_on_queue;
+ 			$result = $db->sql_query($sql);
+ 
+ 			// same intersection logic as the above group ID portion
+ 			$user_ids = $usernames = array();
+ 			while ($row = $db->sql_fetchrow($result))
+ 			{
+ 				// Do not prune bots and the user currently pruning.
+ 				if ($row['user_id'] != $user->data['user_id'] && !in_array($row['user_id'], $bot_ids))
+ 				{
+ 					$user_ids[] = $row['user_id'];
+ 					$usernames[$row['user_id']] = $row['username'];
+ 				}
+ 			}
+ 			$db->sql_freeresult($result);
  		}
  	}
  }
